.hide_thread_button span > span,
.hide_reply_button span > span {
  background-color: #{theme["Links"]};
}
#mascot_hide label {
  border-bottom: 1px solid #{theme["Reply Border"]};
}
#content .thumb {
  box-shadow: 0 0 5px #{theme["Reply Border"]};
}
.export-button,
.mascotname,
#mascot-options {
  background: #{theme["Dialog Background"]};
  border: 1px solid #{theme["Buttons Border"]};
}
.highlight-you .opContainer.quotesYou,
.highlight-own .opContainer.your-post,
.opContainer.filter-highlight {
  box-shadow: inset 5px 0 #{theme["Backlinked Reply Outline"]};
}
.highlight-you .quotesYou > .reply,
.highlight-own .your-post > .reply,
.filter-highlight > .reply {
  box-shadow: -5px 0 #{theme["Backlinked Reply Outline"]};
}
hr {
  border-bottom: 1px solid #{theme["Reply Border"]};
}
hr#unread-line {
  border-bottom: 1px solid #{theme["Reply Background"]};
  visibility: visible;
}
.threadContainer {
  border-color: #{theme["Reply Border"]} !important;
}
html {
  background: #{backgroundC or ''};
  background-image: #{theme["Background Image"] or ''};
  background-repeat: #{theme["Background Repeat"] or ''};
  background-attachment: #{theme["Background Attachment"] or ''};
  background-position: #{theme["Background Position"] or ''};
}
.panel,
.section-container,
#exlinks-options-content,
#themecontent {
  background: #{backgroundC};
  border: 1px solid #{theme["Reply Border"]};
}
.sections-list > a.tab-selected {
  background: #{backgroundC};
  border-color: #{theme["Reply Border"]};
}
img[src*="//boards.4chan.org/js/jsMath/fonts/"],
.captcha-filter .captcha-img,
.captcha-filter .captcha-root iframe,
.captcha-filter .pls-container {
  <%= filter %>: url('<% if (type === 'userscript') { %>data:image/svg+xml,#{Style.svgs.captchafilter.replace /(\'|\")/g, '%22'}<% } %>#captcha-filter');
}
.silhouettize-mascots #mascot img,
.silhouette img {
  <%= filter %>: url('<% if (type === 'userscript') { %>data:image/svg+xml,#{Style.svgs.mascotfilter.replace /(\'|\")/g, '%22'}<% } %>#mascot-filter');
}
.grayscale-mascots #mascot {
  <%= filter %>: url('<% if (type === 'userscript') { %>data:image/svg+xml,#{Style.svgs.grayscale.replace /(\'|\")/g, '%22'}<% } %>#grayscale');
}
#boardTitle {
  text-shadow:
     1px  1px #{backgroundC},
    -1px -1px #{backgroundC},
     1px -1px #{backgroundC},
    -1px  1px #{backgroundC};
}
.sidebar-glow #boardTitle {
  text-shadow:
     1px  1px  1px #{backgroundC},
    -1px -1px  1px #{backgroundC},
     1px -1px  1px #{backgroundC},
    -1px  1px  1px #{backgroundC},
     0    2px  4px rgba(0,0,0,.6),
     0    0   10px rgba(0,0,0,.6);
}
#exlinks-options,
#appchanx-settings,
#qrtab,
input[type="submit"],
input[value="Report"],
span[style="left: 5px; position: absolute;"] a {
  background: #{theme["Buttons Background"]};
  border: 1px solid #{theme["Buttons Border"]};
}
.enabled .mascotcontainer {
  background: #{theme["Buttons Background"]};
  border-color: #{theme["Buttons Border"]};
}
#dump,
#qr-filename-container,
#appchanx-settings input,
.captcha-img,
.dump #dump,
.qr-preview,
.selectrice,
button,
input,
textarea {
  background: #{theme["Input Background"]};
  border: 1px solid #{theme["Input Border"]};
}
.has-file #qr-extras-container {
  background: #{theme["Input Background"]};
}
#dump:hover,
#qr-filename-container:hover,
.selectrice:hover,
#selectrice li:hover,
#selectrice li:nth-of-type(2n+1):hover,
input:hover,
textarea:hover {
  background: #{theme["Hovered Input Background"]};
  border-color: #{theme["Hovered Input Border"]};
}
.has-file #qr-filename-container:hover #qr-extras-container {
  background: #{theme["Hovered Input Background"]};
}
#dump:active,
#dump:focus,
#selectrice li:focus,
.selectrice:focus,
#qr-filename-container:active,
#qr-filename-container:focus,
input:focus,
textarea:focus,
textarea.field:focus {
  background: #{theme["Focused Input Background"]};
  border-color: #{theme["Focused Input Border"]};
  color: #{theme["Inputs"]};
}
.has-file #qr-filename-container:active #qr-extras-container,
.has-file #qr-filename-container:focus #qr-extras-container {
  background: #{theme["Focused Input Background"]};
}
#disclaimer-dialog,
#ft,
#mouseover,
#post-preview,
#qp .post,
#threads > .thread,
#xupdater,
.box-outer,
.reply.post {
  border-width: 1px;
  border-style: solid;
  border-color: #{theme["Reply Border"]};
  background: #{theme["Reply Background"]};
}
.exblock.reply,
.reply.post.highlight,
.reply.post:target {
  background: #{theme["Highlighted Reply Background"]};
  border: 1px solid #{theme["Highlighted Reply Border"]};
}
#header-bar,
.pagelist {
  background: #{theme["Navigation Background"]};
  border-color: #{theme["Navigation Border"]};
}
#doc,
#threads,
.board > .thread {
  background: #{theme["Thread Wrapper Background"]};
  border: 1px solid #{theme["Thread Wrapper Border"]};
}
#boardNavDesktopFoot,
#mascot_hide,
#menu,
#selectrice,
#themeConf,
#thread-watcher,
#thread-watcher:hover,
.announcements-slideout #globalMessage,
.dialog,
.post-form-style-float #qr,
.post-form-decorations #qr,
.submenu {
  background: #{theme["Dialog Background"]};
  border: 1px solid #{theme["Dialog Border"]};
}
#qp.dialog {
  border: none;
}
.watch-thread-link {
  background-image: url("data:image/svg+xml,<svg viewBox='0 0 26 26' preserveAspectRatio='true' xmlns='http://www.w3.org/2000/svg'><path fill='#{theme["Post Numbers"].replace '#', '%23'}' d='M24.132,7.971c-2.203-2.205-5.916-2.098-8.25,0.235L15.5,8.588l-0.382-0.382c-2.334-2.333-6.047-2.44-8.25-0.235c-2.204,2.203-2.098,5.916,0.235,8.249l8.396,8.396l8.396-8.396C26.229,13.887,26.336,10.174,24.132,7.971z'/></svg>");
} 
.deleteform::before,
.deleteform,
#qr .warning {
  background: #{theme["Input Background"]};
  border-color: #{theme["Input Border"]};
}
.disabledwarning,
.warning {
  color: #{theme["Warnings"]};
}
#charCount {
  color: #{(if Style.lightTheme then "rgba(0,0,0,0.7)" else "rgba(255,255,255,0.7)")};
}
.postNum a {
  color: #{theme["Post Numbers"]};
}
.subject {
  color: #{theme["Subjects"]} !important;
}
.dateTime,
.post-ago {
  color: #{theme["Timestamps"]} !important;
}
#fs_status a,
#header-bar .shortcut > span,
#updater #update-status:not(.new)::after,
#showQR,
.abbr,
.boxbar,
.boxcontent,
.deleteform::before,
.pages strong,
.pln,
.reply,
.reply.highlight,
.summary,
body,
button,
span[style="left: 5px; position: absolute;"] a,
input,
textarea {
  color: #{theme["Text"]};
}
#exlinks-options-content > table,
#appchanx-settings fieldset,
#selectrice {
  border-bottom: 1px solid #{theme["Reply Border"]};
  box-shadow: inset #{theme["Shadow Color"]} 0 0 5px;
}
.quote + .spoiler:hover,
.quote {
  color: #{theme["Greentext"]};
}
.forwardlink {
  border-bottom: 1px dashed #{theme["Backlinks"]};
}
.container::before {
  color: #{theme["Timestamps"]};
}
.quote-shadows #menu,
.quote-shadows #post-preview,
.quote-shadows #qp .opContainer,
.quote-shadows #qp .replyContainer,
.quote-shadows .submenu {
  box-shadow: 5px 5px 5px #{theme['Shadow Color']};
}
.rice {
  background: #{theme["Checkbox Background"]};
  border: 1px solid #{theme["Checkbox Border"]};
}
.selectrice::before {
  border-left: 1px solid #{theme["Input Border"]};
}
.selectrice::after {
  border-top: .45em solid #{theme["Inputs"]};
}
.bd {
  background: #{theme["Buttons Background"]};
  border: 1px solid #{theme["Buttons Border"]};
}
.pages a,
#header-bar a {
  color: #{theme["Navigation Links"]};
}
input[type=checkbox]:checked + .rice::after {
  border-color: #{theme["Inputs"]};
}
#addReply,
#dump,
.button,
.entry,
.replylink,
a {
  color: #{theme["Links"]};
}
.backlink {
  color: #{theme["Backlinks"]};
}
.backlink-icons .backlink {
  background-image: url("data:image/svg+xml,<svg viewBox='0 0 30 30' preserveAspectRatio='true' xmlns='http://www.w3.org/2000/svg'><path fill='rgb(#{bLink.rgb()})' d='M12.981,9.073V6.817l-12.106,6.99l12.106,6.99v-2.422c3.285-0.002,9.052,0.28,9.052,2.269c0,2.78-6.023,4.263-6.023,4.263v2.132c0,0,13.53,0.463,13.53-9.823C29.54,9.134,17.952,8.831,12.981,9.073z'/></svg>");  font-size: 0px !important;
  padding: 12px 12px 1px 1px;
  opacity: 0.6;
}
.qiQuote,
.quotelink {
  color: #{theme["Quotelinks"]};
}
#addReply:hover,
#dump:hover,
.entry:hover,
.replylink:hover,
.qiQuote:hover,
.quotelink:hover,
a .name:hover,
a .postertrip:hover,
a:hover {
  color: #{theme["Hovered Links"]};
}
#header-bar a:hover,
#boardTitle a:hover {
  color: #{theme["Hovered Navigation Links"]};
}
#boardTitle {
  color: #{theme["Board Title"]};
}
.name,
.post-author {
  color: #{theme["Names"]} !important;
}
.post-tripcode,
.postertrip,
.trip {
  color: #{theme["Tripcodes"]} !important;
}
a .postertrip,
a .name {
  color: #{theme["Emails"]};
}
.post.reply.qphl,
.post.op.qphl {
  border-color: #{theme["Backlinked Reply Outline"]};
  background: #{theme["Highlighted Reply Background"]};
}
.quote-shadows .inline .post {
  box-shadow: 5px 5px 5px #{theme['Shadow Color']};
}
.placeholder,
#qr input::placeholder,
#qr textarea::placeholder {
  color: #{if Style.lightTheme then "rgba(0,0,0,0.3)" else "rgba(255,255,255,0.2)"} !important;
}
#qr input:placeholder,
#qr textarea:placeholder,
.placeholder {
  color: #{if Style.lightTheme then "rgba(0,0,0,0.3)" else "rgba(255,255,255,0.2)"} !important;
}
#appchanx-settings fieldset,
.boxcontent dd,
.selectrice ul {
  border-color: #{if Style.lightTheme then "rgba(0,0,0,0.1)" else "rgba(255,255,255,0.1)"};
}
#appchanx-settings li,
#selectrice li:not(:first-of-type) {
  border-top: 1px solid #{if Style.lightTheme then "rgba(0,0,0,0.05)" else "rgba(255,255,255,0.025)"};
}
.a-icon,
#shortcuts .fa {
  #{unless Style.lightTheme then "<%= filter %>: url('<% if (type === 'userscript') { %>data:image/svg+xml,#{Style.svgs.iconsfilter.replace /(\'|\")/g, '%22'}<% } %>#icons-filter');" else ""}
}
.alternate-post-colors #threads > .thread:nth-of-type(2n+1),
.alternate-post-colors .replyContainer:nth-of-type(2n+1) .post {
  background-image: linear-gradient(#{if replybg then ("rgba(" + (replybg.shiftRGB -4, false) + ",0.8), rgba(" + (replybg.shiftRGB -4, false) + ",0.8)") else if Style.lightTheme then "rgba(0,0,0,0.05), rgba(0,0,0,0.05)" else "rgba(255,255,255,0.02), rgba(255,255,255,0.02)"});
}
.color-reply-headings .boxbar,
.color-reply-headings .postInfo {
  background: #{if replybg then "rgba(" + (replybg.shiftRGB -12, false) + ",0.8)" else "rgba(0,0,0,0.1)"};
  border-bottom: 1px solid #{theme["Reply Border"]}
}
.color-file-info .file {
  background: #{if replybg then "rgba(" + (replybg.shiftRGB -8, false) + ",0.8)" else "rgba(0,0,0,0.1)"};
  border-bottom: 1px solid #{theme["Reply Border"]}
  border-top: 1px solid #{theme["Reply Border"]}
}
.color-reply.headings.color-file-info {
  border-top: none;
}
.op-background .op.post {
  background: #{theme["Reply Background"]};
  border: 1px solid #{theme["Reply Border"]};
}
.op-background .op.post:target
.op-background .op.post.highlight {
  background: #{theme["Highlighted Reply Background"]};
  border: 1px solid #{theme["Highlighted Reply Border"]};
}
.fourchan-banner-at-sidebar-top.icon-orientation-vertical body::after {
  background: #{backgroundC};
}
.fourchan-banner-at-sidebar-top.icon-orientation-vertical.fourchan-ss-sidebar body::after,
.fourchan-banner-at-sidebar-top.fourchan-ss-sidebar body::before {
  background: rgba(#{if background = new Color theme["Reply Background"] then background.shiftRGB -18}, 0.8);
}
.fourchan-ss-sidebar.sidebar-location-right body::before {
  border-left: 2px solid #{backgroundC};
  box-shadow:
    inset 1px 0 0 #{theme["Reply Border"]},
    -1px 0 0 #{theme["Reply Border"]};
}
.fourchan-ss-sidebar.sidebar-location-left body::before {
  border-right: 2px solid #{backgroundC};
  box-shadow:
    1px 0 0 #{theme["Reply Border"]},
    inset -1px 0 0 #{theme["Reply Border"]};
}
.sage-highlighting-text.sage-highlight-position-before a.useremail[href*="sage"]:last-of-type::before,
.sage-highlighting-text.sage-highlight-position-before a.useremail[href*="Sage"]:last-of-type::before,
.sage-highlighting-text.sage-highlight-position-before a.useremail[href*="SAGE"]:last-of-type::before,
.sage-highlighting-text.sage-highlight-position-after a.useremail[href*="sage"]:last-of-type::after,
.sage-highlighting-text.sage-highlight-position-after a.useremail[href*="Sage"]:last-of-type::after,
.sage-highlighting-text.sage-highlight-position-after a.useremail[href*="SAGE"]:last-of-type::after {
  content: " (sage) ";
  color: #{theme["Sage"]};
}
.quote-shadows #qr {
  box-shadow: 5px 5px 5px #{theme['Shadow Color']};
}
/* /f/ */
.postblock {
  color: #{theme["Text"]};
  font-weight: bold;
  font-size: 10pt;
}
tbody > tr:nth-of-type(2n+1){
  background: #{theme["Reply Background"]} !important;
}
table.flashListing .highlightPost::after {
  content: '●';
  color: #{theme["Text"]};
  position: relative;
  left: 12px;
  margin-left: -10px;
}
.flashListing > tbody {
  background: url('/image/fade.png') repeat-x scroll center top #{backgroundC} !important;
  padding-top: 200px;
}
#{theme["Custom CSS"].replace(/\s+/g, ' ').trim()}